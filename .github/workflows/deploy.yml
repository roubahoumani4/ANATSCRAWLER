name: Deploy to Production

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'

      - name: Validate required secrets
        env:
          APP_PORT: ${{ secrets.APP_PORT }}
          ELASTICSEARCH_URL: ${{ secrets.ELASTICSEARCH_URL }}
          MONGODB_URL: ${{ secrets.MONGODB_URL }}
          REDIS_URL: ${{ secrets.REDIS_URL }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          COOKIE_SECRET: ${{ secrets.COOKIE_SECRET }}
          DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
          DEPLOY_PORT: ${{ secrets.DEPLOY_PORT }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          missing=0
          if [ -z "$APP_PORT" ]; then echo "❌ Missing secret: APP_PORT"; missing=1; fi
          if [ -z "$ELASTICSEARCH_URL" ]; then echo "❌ Missing secret: ELASTICSEARCH_URL"; missing=1; fi
          if [ -z "$MONGODB_URL" ]; then echo "❌ Missing secret: MONGODB_URL"; missing=1; fi
          if [ -z "$REDIS_URL" ]; then echo "❌ Missing secret: REDIS_URL"; missing=1; fi
          if [ -z "$JWT_SECRET" ]; then echo "❌ Missing secret: JWT_SECRET"; missing=1; fi
          if [ -z "$COOKIE_SECRET" ]; then echo "❌ Missing secret: COOKIE_SECRET"; missing=1; fi
          if [ -z "$DEPLOY_HOST" ]; then echo "❌ Missing secret: DEPLOY_HOST"; missing=1; fi
          if [ -z "$DEPLOY_PORT" ]; then echo "❌ Missing secret: DEPLOY_PORT"; missing=1; fi
          if [ -z "$SSH_PRIVATE_KEY" ]; then echo "❌ Missing secret: SSH_PRIVATE_KEY"; missing=1; fi
          if [ "$missing" -eq 1 ]; then exit 1; fi

      - name: Build and Prepare
        run: |
          npm ci
          npm run build:client
          npm run build:server
          npm audit --audit-level=critical

      - name: Deploy, Migrate, and Seed
        uses: appleboy/ssh-action@v1.0.0
        env:
          APP_PORT: ${{ secrets.APP_PORT }}
          ELASTICSEARCH_URL: ${{ secrets.ELASTICSEARCH_URL }}
          MONGODB_URL: ${{ secrets.MONGODB_URL }}
          REDIS_URL: ${{ secrets.REDIS_URL }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          COOKIE_SECRET: ${{ secrets.COOKIE_SECRET }}
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          port: ${{ secrets.DEPLOY_PORT }}
          username: ituu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          use_insecure_cipher: true
          script: |
            set -e
            SUDOPASS="Klapauciusa12"
            export SUDOPASS
            # Ensure pm2 is installed
            if ! command -v pm2 >/dev/null 2>&1; then
              echo "$SUDOPASS" | sudo -S npm install -g pm2
            fi
            echo "$SUDOPASS" | sudo -S pm2 delete all || true
            echo "$SUDOPASS" | sudo -S rm -rf /var/www/anatscrawler
            echo "$SUDOPASS" | sudo -S mkdir -p /var/www/anatscrawler
            echo "$SUDOPASS" | sudo -S chown -R $(whoami):$(whoami) /var/www/anatscrawler
            cd /var/www/anatscrawler
            if [ -d .git ]; then
              git pull origin main
            else
              git clone https://github.com/roubahoumani4/ANATSCRAWLER.git .
            fi
            rm -rf node_modules client/dist
            if [ -f package-lock.json ]; then
              npm ci --omit=dev
            else
              npm install --omit=dev
            fi
            echo "$SUDOPASS" | sudo -S apt-get update
            echo "$SUDOPASS" | sudo -S apt-get install -y xvfb libxkbcommon-x11-0 libxcb-xinerama0
            xvfb-run -a npm run build
            npm run migrate
            npm run seed
            cat << EOF > .env
            NODE_ENV=production
            PORT=$APP_PORT
            HOST=0.0.0.0
            ELASTICSEARCH_URL=$ELASTICSEARCH_URL
            MONGODB_URL=$MONGODB_URL
            REDIS_URL=$REDIS_URL
            VITE_API_URL=/api
            JWT_SECRET=$JWT_SECRET
            COOKIE_SECRET=$COOKIE_SECRET
            EOF
            chmod 600 .env
            [ -f dist/index.js ] && [ -f client/dist/index.html ]
            echo "$SUDOPASS" | sudo -S pm2 start ecosystem.config.cjs
            echo "$SUDOPASS" | sudo -S pm2 save
            # Health check with retries
            for i in {1..5}; do
              if curl -s http://localhost:$APP_PORT/api/health | grep -q "healthy"; then
                echo "✅ Health check passed."
                break
              else
                echo "Waiting for health check... ($i/5)"
                sleep 5
              fi
              if [ "$i" -eq 5 ]; then
                echo "❌ Health check failed after retries. Exiting."
                exit 1
              fi
            done