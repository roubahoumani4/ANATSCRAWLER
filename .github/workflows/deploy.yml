name: Deploy to Production

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy to Server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: 46.165.254.190
          port: 50103
          username: ${{ secrets.WEBAPP_VM_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            mkdir -p /var/www/darkscrawler
            chown -R ${{ secrets.WEBAPP_VM_USER }}:${{ secrets.WEBAPP_VM_USER }} /var/www/darkscrawler
            chmod -R 755 /var/www/darkscrawler

      - name: Deploy Files
        uses: appleboy/scp-action@master
        with:
          host: 46.165.254.190
          port: 50103
          username: ${{ secrets.WEBAPP_VM_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: ".,!node_modules"
          target: "/var/www/darkscrawler"
          strip_components: 0
          overwrite: true
          debug: true

      - name: Configure and Start Application
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: 46.165.254.190
          port: 50103
          username: ${{ secrets.WEBAPP_VM_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /var/www/darkscrawler

            # Ensure proper permissions
            chown -R ${{ secrets.WEBAPP_VM_USER }}:${{ secrets.WEBAPP_VM_USER }} .
            chmod -R 755 .

            # Create/update .env file with proper permissions
            touch .env
            chmod 600 .env
            cat > .env << EOL
            NODE_ENV=production
            PORT=5000
            HOST=0.0.0.0
            ELASTICSEARCH_URL=http://192.168.1.110:9200
            MONGODB_URL=mongodb://192.168.1.110:27017/anat_security
            REDIS_URL=redis://192.168.1.110:6379
            VITE_API_URL=/api
            JWT_SECRET=${JWT_SECRET:-defaultsecret}
            COOKIE_SECRET=${COOKIE_SECRET:-defaultsecret}
            EOL

            # Install dependencies
            npm ci --production

            # Build the application
            npm run build

            # Create PM2 configuration file
            cat > ecosystem.config.cjs << 'EOL'
            module.exports = {
              apps: [{
                name: 'darkscrawler',
                script: 'dist/index.js',
                env: {
                  NODE_ENV: 'production',
                  PORT: '5000',
                  HOST: '0.0.0.0',
                  ELASTICSEARCH_URL: 'http://192.168.1.110:9200',
                  MONGODB_URL: 'mongodb://192.168.1.110:27017/anat_security',
                  REDIS_URL: 'redis://192.168.1.110:6379'
                }
              }]
            }
            EOL

            # Start/restart the application
            pm2 reload ecosystem.config.cjs || pm2 start ecosystem.config.cjs
            pm2 save
