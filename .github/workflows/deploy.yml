name: Deploy to Production

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Prepare deployment directory
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: 46.165.254.175
          port: 50103
          username: ituu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          use_insecure_cipher: true
          script: |
            DEPLOY_DIR="/var/www/anatscrawler-$(date +%Y%m%d%H%M%S)"
            echo "Creating deployment directory: $DEPLOY_DIR"
            echo 'Klapauciusa12' | sudo -S mkdir -p $DEPLOY_DIR
            echo 'Klapauciusa12' | sudo -S chown ituu:ituu $DEPLOY_DIR
            echo 'Klapauciusa12' | sudo -S chmod 755 $DEPLOY_DIR
            echo "export DEPLOY_DIR=$DEPLOY_DIR" > /tmp/deploy_dir.sh

      - name: Deploy Files
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: 46.165.254.175
          port: 50103
          username: ituu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          use_insecure_cipher: true
          script: |
            source /tmp/deploy_dir.sh
            TEMP_DIR=$(mktemp -d)
            git clone https://github.com/roubahoumani4/ANATSCRAWLER.git $TEMP_DIR
            echo 'Klapauciusa12' | sudo -S cp -r $TEMP_DIR/* $DEPLOY_DIR/
            echo 'Klapauciusa12' | sudo -S cp -r $TEMP_DIR/.* $DEPLOY_DIR/ 2>/dev/null || true
            rm -rf $TEMP_DIR
            echo 'Klapauciusa12' | sudo -S chown -R ituu:ituu $DEPLOY_DIR
            echo 'Klapauciusa12' | sudo -S chmod -R 755 $DEPLOY_DIR

      - name: Configure and Start Application
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: 46.165.254.175
          port: 50103
          username: ituu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          use_insecure_cipher: true
          script: |
            source /tmp/deploy_dir.sh
            cd $DEPLOY_DIR

            echo 'Klapauciusa12' | sudo -S chown -R ituu:ituu .
            echo 'Klapauciusa12' | sudo -S chmod -R 755 .

            # Setup environment file
            echo "NODE_ENV=production" > .env
            echo "PORT=5000" >> .env
            echo "HOST=0.0.0.0" >> .env
            echo "ELASTICSEARCH_URL=http://192.168.1.110:9200" >> .env
            echo "MONGODB_URL=mongodb://192.168.1.110:27017/anat_security" >> .env
            echo "REDIS_URL=redis://192.168.1.110:6379" >> .env
            echo "VITE_API_URL=/api" >> .env
            echo "JWT_SECRET=NWagPsTDSNKzcgJQvYouOyTwCbQ0ZTG+zE3/8eTPqQM=" >> .env
            echo "COOKIE_SECRET=NnnQPZ8wazuVR26qNCZ9wRXAdUipV/sE/jC+mKizTXg=" >> .env
            
            echo 'Klapauciusa12' | sudo -S chown ituu:ituu .env
            echo 'Klapauciusa12' | sudo -S chmod 600 .env

            # Install dependencies and build
            npm ci
            echo 'Klapauciusa12' | sudo -S apt-get update
            echo 'Klapauciusa12' | sudo -S apt-get install -y xvfb

            export DISPLAY=:99
            export QT_QPA_PLATFORM=offscreen
            export NODE_ENV=production

            echo 'Klapauciusa12' | sudo -S Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
            sleep 3

            npm run build

            # Validate server build
            if [ ! -f "dist/index.js" ]; then
              echo "‚ùå Server build failed: dist/index.js not found"
              echo "Contents of project root:"
              ls -la
              echo "Contents of dist directory (if exists):"
              ls -la dist/ || echo "dist directory does not exist"
              exit 1
            fi
            echo "‚úÖ Server build successful: dist/index.js found"

            # Validate client build
            if [ ! -f "client/dist/index.html" ]; then
              echo "‚ùå Client build failed: client/dist/index.html not found"
              echo "Contents of client directory:"
              ls -la client/ || echo "client directory does not exist"
              echo "Contents of client/dist directory (if exists):"
              ls -la client/dist/ || echo "client/dist directory does not exist"
              exit 1
            fi
            echo "‚úÖ Client build successful: client/dist/index.html found"

            # List deployment directory contents for debugging
            echo "üìÅ Deployment directory contents:"
            find . -type f -name "*.html" -o -name "*.js" -o -name "*.css" | head -20

            # Clean up dev dependencies
            npm ci --omit=dev

            # Setup PM2 configuration with proper CommonJS syntax
            echo "module.exports = {" > ecosystem.config.cjs
            echo "  apps: [{" >> ecosystem.config.cjs
            echo "    name: 'anatscrawler'," >> ecosystem.config.cjs
            echo "    script: 'dist/index.js'," >> ecosystem.config.cjs
            echo "    env: {" >> ecosystem.config.cjs
            echo "      NODE_ENV: 'production'," >> ecosystem.config.cjs
            echo "      PORT: '5000'," >> ecosystem.config.cjs
            echo "      HOST: '0.0.0.0'," >> ecosystem.config.cjs
            echo "      TRUST_PROXY: 'true'," >> ecosystem.config.cjs
            echo "      ELASTICSEARCH_URL: 'http://192.168.1.110:9200'," >> ecosystem.config.cjs
            echo "      MONGODB_URL: 'mongodb://192.168.1.110:27017/anat_security'," >> ecosystem.config.cjs
            echo "      REDIS_URL: 'redis://192.168.1.110:6379'," >> ecosystem.config.cjs
            echo "      JWT_SECRET: 'NWagPsTDSNKzcgJQvYouOyTwCbQ0ZTG+zE3/8eTPqQM='," >> ecosystem.config.cjs
            echo "      COOKIE_SECRET: 'NnnQPZ8wazuVR26qNCZ9wRXAdUipV/sE/jC+mKizTXg='" >> ecosystem.config.cjs
            echo "    }," >> ecosystem.config.cjs
            echo "    instances: 1," >> ecosystem.config.cjs
            echo "    exec_mode: 'fork'," >> ecosystem.config.cjs
            echo "    max_memory_restart: '1G'," >> ecosystem.config.cjs
            echo "    watch: false," >> ecosystem.config.cjs
            echo "    error_file: 'logs/err.log'," >> ecosystem.config.cjs
            echo "    out_file: 'logs/out.log'," >> ecosystem.config.cjs
            echo "    merge_logs: true," >> ecosystem.config.cjs
            echo "    log_date_format: 'YYYY-MM-DD HH:mm:ss'," >> ecosystem.config.cjs
            echo "    listen_timeout: 10000," >> ecosystem.config.cjs
            echo "    kill_timeout: 5000" >> ecosystem.config.cjs
            echo "  }]" >> ecosystem.config.cjs
            echo "}" >> ecosystem.config.cjs

            mkdir -p logs
            
            # Stop existing PM2 process
            pm2 delete anatscrawler || true
            
            # Start new application
            pm2 start ecosystem.config.cjs
            
            # Wait for application to start
            sleep 10
            
            # Verify the application is running and listening
            if pm2 show anatscrawler | grep -q "online"; then
              echo "‚úÖ PM2 process is online"
              pm2 show anatscrawler
            else
              echo "‚ùå PM2 process failed to start"
              echo "PM2 Status:"
              pm2 ls
              echo "PM2 Logs:"
              pm2 logs anatscrawler --lines 50
              exit 1
            fi
            
            # Check if port 5000 is listening with more detailed output
            RETRIES=15
            PORT_LISTENING=false
            while [ $RETRIES -gt 0 ]; do
              if netstat -tln | grep -q ":5000"; then
                echo "‚úÖ Server is listening on port 5000"
                PORT_LISTENING=true
                break
              else
                echo "‚è≥ Waiting for server to start listening on port 5000... ($RETRIES retries left)"
                echo "Current listening ports:"
                netstat -tln | grep LISTEN
                sleep 3
                RETRIES=$((RETRIES - 1))
              fi
            done
            
            if [ "$PORT_LISTENING" = false ]; then
              echo "‚ùå Server failed to listen on port 5000 after waiting"
              echo "Final PM2 Status:"
              pm2 ls
              echo "Final PM2 Logs:"
              pm2 logs anatscrawler --lines 100
              echo "Process Details:"
              pm2 show anatscrawler
              echo "System Processes on port 5000:"
              lsof -i :5000 || echo "No processes found on port 5000"
              exit 1
            fi

            # Update symlink for zero-downtime deployment
            CURRENT_LINK="/var/www/anatscrawler"
            if [ -L "$CURRENT_LINK" ]; then
              echo "Removing existing symlink: $CURRENT_LINK"
              echo 'Klapauciusa12' | sudo -S rm "$CURRENT_LINK"
            fi
            echo "Creating new symlink: $CURRENT_LINK -> $DEPLOY_DIR"
            echo 'Klapauciusa12' | sudo -S ln -sf "$DEPLOY_DIR" "$CURRENT_LINK"

            # Verify static files are accessible
            echo "üîç Verifying static files are accessible..."
            if [ -f "client/dist/index.html" ]; then
              echo "‚úÖ index.html found at: $(pwd)/client/dist/index.html"
              ls -la client/dist/index.html
            else
              echo "‚ö†Ô∏è  Warning: index.html not found in expected location"
              find . -name "index.html" -type f | head -5
            fi

            # Test a simple HTTP request to the server
            echo "üîç Testing server response..."
            CURL_TEST=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:5000/ || echo "000")
            if [ "$CURL_TEST" = "200" ] || [ "$CURL_TEST" = "404" ]; then
              echo "‚úÖ Server is responding (HTTP $CURL_TEST)"
            else
              echo "‚ö†Ô∏è  Server response test: HTTP $CURL_TEST"
            fi

            # Clean up old deployments (keep last 5)
            echo "üßπ Cleaning up old deployments..."
            cd /var/www
            OLD_DEPLOYMENTS=$(ls -1dt anatscrawler-* 2>/dev/null | tail -n +6)
            if [ -n "$OLD_DEPLOYMENTS" ]; then
              echo "Removing old deployments:"
              echo "$OLD_DEPLOYMENTS"
              echo "$OLD_DEPLOYMENTS" | xargs -r echo 'Klapauciusa12' | sudo -S rm -rf
            else
              echo "No old deployments to clean up"
            fi
            
            # Save PM2 process list
            pm2 save

            echo "üéâ Deployment completed successfully!"
            echo "üìä Final PM2 status:"
            pm2 ls
            echo "üìä Final network status:"
            netstat -tln | grep LISTEN | grep 5000
            echo "üìä Deployment summary:"
            echo "  - Server: $(pm2 show anatscrawler | grep 'status' || echo 'Status unknown')"
            echo "  - Port 5000: $(netstat -tln | grep ':5000' | wc -l) listener(s)"
            echo "  - Deployment dir: $DEPLOY_DIR"
            echo "  - Symlink: $CURRENT_LINK -> $(readlink $CURRENT_LINK)"

      - name: Health Check
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: 46.165.254.175
          port: 50103
          username: ituu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          use_insecure_cipher: true
          script: |
            echo "üè• Performing health check..."
            
            # Make validation script executable and run it
            chmod +x scripts/validate-deployment.sh
            
            # Run our comprehensive validation script
            if ./scripts/validate-deployment.sh; then
              echo "‚úÖ Comprehensive health check passed!"
              echo "üåê Application should be accessible at: https://horus.anatsecurity.fr"
            else
              echo "‚ö†Ô∏è  Health check completed with some issues"
            fi
            
            # Additional manual checks for GitHub Actions context
            echo ""
            echo "üìã Additional deployment info:"
            echo "  - PM2 Status: $(pm2 show anatscrawler | grep 'status' | awk '{print $4}' || echo 'unknown')"
            echo "  - Port 5000 listeners: $(netstat -tln | grep ':5000' | wc -l)"
            echo "  - Process uptime: $(pm2 show anatscrawler | grep 'uptime' || echo 'unknown')"
            echo "  - Memory usage: $(pm2 show anatscrawler | grep 'memory' || echo 'unknown')"

      - name: Deployment Failed - Debug Info
        if: failure()
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: 46.165.254.175
          port: 50103
          username: ituu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          use_insecure_cipher: true
          script: |
            echo "üö® Deployment failed! Gathering debug information..."
            
            source /tmp/deploy_dir.sh || echo "Warning: Could not source deploy directory"
            
            echo "üìÅ Current deployment directory: ${DEPLOY_DIR:-'unknown'}"
            
            if [ -n "$DEPLOY_DIR" ] && [ -d "$DEPLOY_DIR" ]; then
              cd "$DEPLOY_DIR"
              echo "üìã Deployment directory contents:"
              ls -la
              
              echo "üìã Build outputs:"
              ls -la dist/ 2>/dev/null || echo "No dist directory"
              ls -la client/dist/ 2>/dev/null || echo "No client/dist directory"
            fi
            
            echo "üìä PM2 Status:"
            pm2 ls
            
            echo "üìä PM2 Logs (last 50 lines):"
            pm2 logs anatscrawler --lines 50 || echo "No PM2 logs available"
            
            echo "üìä System processes on port 5000:"
            lsof -i :5000 || echo "No processes on port 5000"
            
            echo "üìä Network listeners:"
            netstat -tln | grep LISTEN
            
            echo "üìä System resources:"
            free -h
            df -h /var/www
            
            echo "üìä Recent system logs:"
            journalctl -n 20 --no-pager || echo "Cannot access system logs"
